/*
1. Try to establish serial connection with computer.

2. Send firmware version back to computer.
3. Wait for instructions from computer.

4. Check message (E-stop, Start, Ping, [Set speed, Move, ToolCmd])
	E-stop:stop everything
	Start: Start executing queue
	ping: send back an acknowledge message
	Set speed: Add to queue
	Move: Add to queue
	ToolCmd: Add to queue

Queue Control Module
	create a buffer of around 500 instructions
	store an initial 250 commands.
	when start is executed start processing the queue
	before poping each instruction off the queue check for queue flag.
	during normal motor delay time listen for computer commands without requesting anything.
	after 10 instructions have been processed during motor delay...
		prompt the computer for instruction
		read the instruction
		error check the instruction
		send message (received ok and send another, received ok hold off for now, send again)
	when motor is slow timer runs out return to executing the queue.
	

Needed Flags
	Process queue
	Ping, process at next convenience
	start queue

Needed Interrupts
	E-Stop, clear queue flag
		

Datatype	RAM usage
void keyword	N/A
boolean		1 byte
char		1 byte
unsigned char	1 byte
int		2 byte
unsigned int	2 byte
word		2 byte
long		4 byte
unsigned long	4 byte
float		4 byte
double		4 byte
string		1 byte + x
array		1 byte + x
enum		N/A
struct		N/A
pointer		N/A


Messages:
-32 bits to work with
-|type| information |type|

0 Ping: 0000
1 Acknowledge: 0001 |error 0 or 1 (one bit) | (8 bits) Firmware | (open) | type (4 bits)
2 EStop:	0010 | open | type
3 Request Commands:	0011 |
4 Start Queue: 0100
5 SetSpeed: 0101 |
6 ToolCMD: 0110 |

MoveX: 	


/*
